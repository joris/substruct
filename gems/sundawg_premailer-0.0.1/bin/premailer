#!/usr/bin/env ruby
#
# = Premailer
require 'trollop'
require File.join(File.dirname(__FILE__), '../lib/premailer')

opts = Trollop::options do
  version "Premailer #{Premailer::VERSION} (c) 2008-2009 Alex Dunae"
  banner <<-EOS
Improve the rendering of HTML emails by making CSS inline, converting links and warning about unsupported code.

Usage:
  premailer [options] inputfile [outputfile] [warningsfile]

Example
  premailer http://example.com/
  premailer http://example.com/ out.html out.txt warnings.txt
  premailer --base-url=http://example.com/ src.html out.html

Options:
EOS
  opt :base_url, "Manually set the base URL, useful for local files", :type => String
  opt :query_string, "Query string to append to links", :type => String, :short => 'q'
  opt :line_length, "Length of lines when creating plaintext version", :type => :int, :default => 65, :short => 'l'
  opt :remove_classes, "Remove classes from the HTML document?", :default => false
  opt :css, "Manually specify css stylesheets", :type => String, :multi => true
  opt :verbose, '', :default => false, :short => 'v'
end

inputfile    = ARGV.shift
outfile      = ARGV.shift
txtfile      = ARGV.shift
warningsfile = ARGV.shift

Trollop::die "inputfile is missing" if inputfile.nil?

premailer_opts = {
  :base_url => opts[:base_url],
  :query_string => opts[:query_string],
  :show_warnings => opts[:show_warnings] ? Premailer::Warnings::SAFE : Premailer::Warnings::NONE,
  :line_length => opts[:line_length],
  :remove_classes => opts[:remove_classes],
  :css => opts[:css]
}

premailer = Premailer.new(inputfile, premailer_opts)

# html output
if outfile
  fout = File.open(outfile, 'w')
  fout.puts premailer.to_inline_css
  fout.close
else
  p premailer.to_inline_css
  exit
end

# plaintext output
if txtfile
  fout = File.open(txtfile, 'w')
  fout.puts premailer.to_plain_text
  fout.close
end

# warnings output
if warningsfile
  fout = File.open(warningsfile, 'w')
  premailer.warnings.each do |w|
    fout.puts "- #{w[:message]} (#{w[:level]}) may not render properly in #{w[:clients]}"
  end
  fout.close
end
